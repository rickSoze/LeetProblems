package JZOffer;

public class JZ53_2_n到1中缺失的数字 {
	/*一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。
	在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。
示例 1:
输入: [0,1,3]
输出: 2
示例2:
输入: [0,1,2,3,4,5,6,7,9]
输出: 8

限制：
1 <= 数组长度 <= 10000

。*/
//思路1：遍历百分之百解决
//思路2：一遍遍历能解决的用二分法肯定也可以
	//双指针思路： 左右指针，中间位置i处的数m如果大于i，r=m-1，否则 l=m+1      √这是最优解
	//小问题： 题意理解有一点小错误，所有序列都应该是从0~n-1的。如果长度是1，那么显然必须有0
	class Solution {
		public int missingNumber(int[] nums) {
			int l=0,r=nums.length-1;
			while (l!=r){  //这里的判断条件应该用 l<=r而不是 l !=r 这样才能兼顾到特例
				int m = (l+r)/2;
				if (nums[m]>m){
				    r=m-1;
				}else {
					l=m+1;
				}
			}
			return l;
		}
	}
}
